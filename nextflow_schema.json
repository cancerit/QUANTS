{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://gitlab.internal.sanger.ac.uk/team113_nextflow_pipelines/QUANTS/-/blob/master/nextflow_schema.json",
    "title": "QUANTS pipeline parameters",
    "description": "Analysis pipeline for satutation genome editing screens",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "input"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/sge/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "input_type": {
                    "type": "string",
                    "description": "Input data type.",
                    "help_text": "Input data type (fastq or cram). Input data type must be the same for all samples listed in the samplesheet."
                },
                "single_end": {
                    "type": "boolean",
                    "description": "Whether data is single-end.",
                    "help_text": "Set this to true if input contains single-ended reads or false if paired-end reads."
                },
                "outdir": {
                    "type": "string",
                    "description": "Path to the output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature",
                    "hidden": true
                }
            }
        },
        "quality_control_options": {
            "title": "Quality control options",
            "type": "object",
            "fa_icon": "fas fa-clipboard-check",
            "description": "Define pipeline options for quality control.",
            "properties": {
                "raw_sequencing_qc": {
                    "type": "boolean",
                    "description": "Define whether the pipeline should run sequencing QC for raw input data.",
                    "help_text": "Set this to true if sequencing QC for raw input data is required, else set to false."
                },
                "read_merging_qc": {
                    "type": "boolean",
                    "description": "Define whether the pipeline should run sequencing QC for merged reads (only suitable for paired-end data with read merging enabled).",
                    "help_text": "Set this to true if sequencing QC for merged reads is required, else set to false."
                },
                "adapter_trimming_qc": {
                    "type": "boolean",
                    "description": "Define whether the pipeline should run sequencing QC for reads which have had adapters removed (only suitable when adapter trimming enabled).",
                    "help_text": "Set this to true if sequencing QC for reads whose adapters have been removed is required, else set to false."
                },
                "primer_trimming_qc": {
                    "type": "boolean",
                    "description": "Define whether the pipeline should run sequencing QC for reads which have had primers removed (only suitable when primer trimming enabled).",
                    "help_text": "Set this to true if sequencing QC for reads whose primers have been removed is required, else set to false."
                },
                "read_filtering_qc": {
                    "type": "boolean",
                    "description": "Define whether the pipeline should run sequencing QC for filtered reads (only suitable when read filtering enabled).",
                    "help_text": "Set this to true if sequencing QC for filtered reads is required, else set to false."
                },
                "seqkit_stats_options": {
                    "type": "string",
                    "description": "Define options for SeqKit stats (only suitable when at least one qc is enabled).",
                    "help_text": "Include valid SeqKit stats command line options where default options are not suitable."
                }
            }
        },
        "downsampling_options": {
            "title": "Downsampling options",
            "type": "object",
            "fa_icon": "fas fa-arrow-down",
            "description": "Define pipeline options for downsampling.",
            "properties": {
                "downsampling": {
                    "type": "boolean",
                    "description": "Define whether the pipeline should downsample the input data.",
                    "help_text": "Set this to true to enable downsampling, else set to false or omit."
                },
                "downsampling_size": {
                    "type": "integer",
                    "description": "Define how many reads the input data should be downsampled to."
                },
                "downsampling_seed": {
                    "type": "integer",
                    "default": 100,
                    "description": "Define the seed for the downscaler randomisation to use.",
                    "help_text": "Optional. Set to 100 by default, set to any other integer to change the output of the downscaler."
                }
            }
        },
        "read_transformation_options": {
            "title": "Read transformation options",
            "type": "object",
            "fa_icon": "fas fa-align-center",
            "description": "Define pipeline options for read reverse complementing.",
            "properties": {
                "read_transform": {
                    "type": "string",
                    "description": "Define whether the pipeline should transform read (applied post-merging for paired-end data).",
                    "help_text": "Set this to reverse, complement or reverse_complement if transformation is required, else set to null."
                }
            }
        },
        "read_merging_options": {
            "title": "Read merging options",
            "type": "object",
            "fa_icon": "fas fa-align-center",
            "description": "Define pipeline options for read merging.",
            "properties": {
                "read_merging": {
                    "type": "string",
                    "description": "Define whether the pipeline should merge reads (only suitable for paired-end data).",
                    "help_text": "Set this to 'flash2' or 'seqprep' if read merging is required, else set to null."
                },
                "seqprep_options": {
                    "type": "string",
                    "description": "Define options for SeqPrep (only suitable for pair-end data with SeqPrep enabled).",
                    "help_text": "Include valid SeqPrep command lines options where default options are not suitable."
                },
                "flash2_options": {
                    "type": "string",
                    "description": "Define options for FLASH2 (only suitable for pair-end data with FLASH2 enabled).",
                    "help_text": "Include valid FLASH2 command line options where default options are not suitable."
                }
            }
        },
        "adapter_trimming_options": {
            "title": "Adapter trimming options",
            "type": "object",
            "fa_icon": "fas fa-cut",
            "description": "Define pipeline options for trimming adapters from reads.",
            "properties": {
                "adapter_trimming": {
                    "type": "string",
                    "description": "Define whether the pipeline should trim adapters from reads.",
                    "help_text": "Set this to 'cutadapt' if adapter trimming is required, else set to null."
                },
                "adapter_cutadapt_options": {
                    "type": "string",
                    "description": "Define options for cutadapt (only suitable when cutadapt enabled).",
                    "help_text": "Include valid cutadapt command line options where default options are not suitable."
                }
            }
        },
        "primer_trimming_options": {
            "title": "Primer trimming options",
            "type": "object",
            "fa_icon": "fas fa-cut",
            "description": "Define pipeline options for trimming primers from reads.",
            "properties": {
                "primer_trimming": {
                    "type": "string",
                    "description": "Define whether the pipeline should trim primers from reads.",
                    "help_text": "Set this to 'cutadapt' if primer trimming is required, else set to null."
                },
                "primer_cutadapt_options": {
                    "type": "string",
                    "description": "Define options for cutadapt (only suitable when cutadapt enabled).",
                    "help_text": "Include valid cutadapt command line options where default options are not suitable."
                }
            }
        },
        "read_filtering_options": {
            "title": "Read filtering options",
            "type": "object",
            "fa_icon": "fas fa-cut",
            "description": "Define pipeline options for read filtering.",
            "properties": {
                "read_filtering": {
                    "type": "string",
                    "description": "Define whether the pipeline should filter reads (only suitable when input is single-end or read merging is enabled).",
                    "help_text": "Set this to true if read filtering is required, else set to false."
                },
                "seqkit_seq_options": {
                    "type": "string",
                    "description": "Define options for SeqKit seq (only suitable when read_filtering enabled).",
                    "help_text": "Include valid SeqKit seq command line options where default options are not suitable."
                }
            }
        },
        "read_modification_options": {
            "title": "Read modification options",
            "type": "object",
            "fa_icon": "fas fa-plus-circle",
            "description": "Define pipeline options for read modification.",
            "properties": {
                "read_modification": {
                    "type": "boolean",
                    "description": "Define whether to add string and qualities to read.",
                    "help_text": "Set this to true if read modification (e.g. adding perfect primer to read) is required, else set to false."
                },
                "append_start": {
                    "type": "string",
                    "description": "Define string to add to start of read sequence.",
                    "help_text": "Define string to add to start of read sequence, else set to null."
                },
                "append_end": {
                    "type": "string",
                    "description": "Define string to add to end of read sequence.",
                    "help_text": "Define string to add to end of read sequence, else set to null."
                },
                "append_quality": {
                    "type": "string",
                    "description": "Define quality value to read quality (this should be a single character).",
                    "help_text": "Define quality value to read quality (this should be a single character), else set to null."
                }
            }
        },
        "quantification_options": {
            "title": "Quantification options",
            "type": "object",
            "fa_icon": "fas fa-list-ol",
            "description": "Define pipeline options for quantification.",
            "properties": {
                "quantification": {
                    "type": "string",
                    "description": "Define whether the pipeline should run quantification.",
                    "help_text": "Set this to 'pyquest' if quantification is required, else set to null."
                },
                "oligo_library": {
                    "type": "string",
                    "format": "file-path",
                    "schema": "assets/schema_input.json",
                    "description": "Path to tab-delimited file containing information about the oligos in the experiment (only required when quantification enabled).",
                    "help_text": "You will need to create a library file with information about the oligos in your experiment before running the pipeline. Use this parameter to specify its location.",
                    "fa_icon": "fas fa-file"
                },
                "transform_library": {
                    "type": "boolean",
                    "description": "Define whether the pipeline should transform the oligo library (only suitable when quantification is enabled).",
                    "help_text": "Set this to true if library transformation is required, else set to false."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "enable_conda": {
                    "type": "boolean",
                    "description": "Run this workflow with Conda. You can also use '-profile conda' instead of providing this parameter.",
                    "hidden": true,
                    "fa_icon": "fas fa-bacon"
                },
                "singularity_pull_docker_container": {
                    "type": "boolean",
                    "description": "Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead.",
                    "hidden": true,
                    "fa_icon": "fas fa-toolbox",
                    "help_text": "This may be useful for example if you are unable to directly pull Singularity containers to run the pipeline due to http/https proxy issues."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/quality_control_options"
        },
        {
            "$ref": "#/definitions/read_transformation_options"
        },
        {
            "$ref": "#/definitions/read_merging_options"
        },
        {
            "$ref": "#/definitions/adapter_trimming_options"
        },
        {
            "$ref": "#/definitions/primer_trimming_options"
        },
        {
            "$ref": "#/definitions/read_filtering_options"
        },
        {
            "$ref": "#/definitions/read_modification_options"
        },
        {
            "$ref": "#/definitions/quantification_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
